#!/bin/bash

# File containing OpenShift API server hostnames (one per line)
CLUSTER_HOSTS_FILE="clusters.txt"

# Prompt for token (secure input)
read -sp "Enter OpenShift Token: " TOKEN
echo ""

# Define namespaces to exclude from standard analysis
EXCLUDED_NAMESPACES="openshift|kube|default|trident|consul-ocp"

# Function to check namespaces in a given cluster
check_namespaces() {
    echo -e "\n🔵 Checking cluster: $1"
    
    # Log in to the cluster
    oc login --server="$1" --token="$TOKEN" --insecure-skip-tls-verify=true > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "❌ Failed to log in to $1"
        return
    fi

    # Get list of Infra and Logging nodes
    INFRA_NODES=$(oc get nodes -l node-role.kubernetes.io/infra -o jsonpath='{.items[*].metadata.name}')
    LOGGING_NODES=$(oc get nodes -l node-role.kubernetes.io/logging -o jsonpath='{.items[*].metadata.name}')

    # Get all namespaces, excluding system and excluded namespaces
    NAMESPACES=$(oc get namespaces --no-headers -o custom-columns=":metadata.name" | grep -Ev "^($EXCLUDED_NAMESPACES)")

    echo -e "Namespace | Node Type | Labels | NodeSelector"

    for ns in $NAMESPACES; do
        # Get list of nodes running pods in this namespace
        NS_NODES=$(oc get pods -n "$ns" -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)

        # Determine node type
        NODE_TYPE="Other"
        for node in $NS_NODES; do
            if echo "$INFRA_NODES" | grep -q "$node"; then NODE_TYPE="Infra"; fi
            if echo "$LOGGING_NODES" | grep -q "$node"; then NODE_TYPE="Logging"; fi
        done

        # Get namespace labels
        LABELS=$(oc get namespace "$ns" --no-headers -o jsonpath='{.metadata.labels}' 2>/dev/null)
        [ -z "$LABELS" ] && LABELS="No Labels"

        # Get nodeSelector for the namespace
        NODE_SELECTOR=$(oc get namespace "$ns" -o jsonpath='{.metadata.annotations.openshift\.io/node-selector}' 2>/dev/null)
        [ -z "$NODE_SELECTOR" ] && NODE_SELECTOR="No NodeSelector"

        echo -e "$ns | $NODE_TYPE | $LABELS | $NODE_SELECTOR"
    done

    # Find unauthorized namespaces running on Infra/Logging nodes (including openshift-gitops)
    echo -e "\n🔍 Unauthorized Namespaces running on Infra/Logging Nodes (Including openshift-gitops):"
    for node in $INFRA_NODES $LOGGING_NODES; do
        UNAUTHORIZED_NS=$(oc get pods --all-namespaces --field-selector spec.nodeName="$node" -o jsonpath='{.items[*].metadata.namespace}' | tr ' ' '\n' | sort -u | grep -Ev "^($EXCLUDED_NAMESPACES)" || grep "^openshift-gitops")
        if [ ! -z "$UNAUTHORIZED_NS" ]; then
            echo -e "⚠️ Node: $node -> Unauthorized Namespaces: $UNAUTHORIZED_NS"
        fi
    done

    echo "✅ Done checking cluster: $1"
}

# Read cluster hosts from file and run check for each
while read -r CLUSTER_HOST; do
    check_namespaces "$CLUSTER_HOST"
done < "$CLUSTER_HOSTS_FILE"

echo "🎯 All clusters checked!"



#!/bin/bash

# Check if the user is logged in
if ! oc whoami &>/dev/null; then
    echo "❌ Not logged into OpenShift. Please run 'oc login' and try again."
    exit 1
fi

# Get the currently logged-in cluster
CLUSTER_URL=$(oc whoami --show-server)
echo -e "\n🔵 Checking OpenShift cluster: $CLUSTER_URL"

# Define namespaces to exclude from standard analysis (except openshift-gitops)
EXCLUDED_NAMESPACES="openshift|kube|default|trident|consul-ocp"

# Get list of Infra and Logging nodes
INFRA_NODES=$(oc get nodes -l node-role.kubernetes.io/infra -o jsonpath='{.items[*].metadata.name}')
LOGGING_NODES=$(oc get nodes -l node-role.kubernetes.io/logging -o jsonpath='{.items[*].metadata.name}')

# Get all namespaces, excluding system and excluded namespaces (except openshift-gitops)
NAMESPACES=$(oc get namespaces --no-headers -o custom-columns=":metadata.name" | grep -Ev "^($EXCLUDED_NAMESPACES)" || true)

echo -e "Namespace | Node Type | Labels | NodeSelector"

for ns in $NAMESPACES; do
    # Get list of nodes running pods in this namespace
    NS_NODES=$(oc get pods -n "$ns" -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)

    # Determine node type
    NODE_TYPE="Other"
    for node in $NS_NODES; do
        if echo "$INFRA_NODES" | grep -q "$node"; then NODE_TYPE="Infra"; fi
        if echo "$LOGGING_NODES" | grep -q "$node"; then NODE_TYPE="Logging"; fi
    done

    # Get namespace labels
    LABELS=$(oc get namespace "$ns" --no-headers -o jsonpath='{.metadata.labels}' 2>/dev/null)
    [ -z "$LABELS" ] && LABELS="No Labels"

    # Get nodeSelector for the namespace
    NODE_SELECTOR=$(oc get namespace "$ns" -o jsonpath='{.metadata.annotations.openshift\.io/node-selector}' 2>/dev/null)
    [ -z "$NODE_SELECTOR" ] && NODE_SELECTOR="No NodeSelector"

    echo -e "$ns | $NODE_TYPE | $LABELS | $NODE_SELECTOR"
done

# Explicitly check if openshift-gitops is running on Infra/Logging nodes
echo -e "\n🔍 Checking if openshift-gitops is running on Infra/Logging Nodes:"
GITOPS_NODES=$(oc get pods -n openshift-gitops -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)

for node in $GITOPS_NODES; do
    if echo "$INFRA_NODES" | grep -q "$node" || echo "$LOGGING_NODES" | grep -q "$node"; then
        echo -e "⚠️ openshift-gitops is running on Infra/Logging node: $node"
    fi
done

echo "✅ Done checking cluster: $CLUSTER_URL"
echo "🎯 All checks completed!"



#!/bin/bash

# Check if the user is logged in
if ! oc whoami &>/dev/null; then
    echo "❌ Not logged into OpenShift. Please run 'oc login' and try again."
    exit 1
fi

# Get the currently logged-in cluster
CLUSTER_URL=$(oc whoami --show-server)
echo -e "\n🔵 Checking OpenShift cluster: $CLUSTER_URL"

# Define namespaces to exclude from standard analysis (except for unauthorized access checks)
EXCLUDED_NAMESPACES="openshift|kube|default|trident|consul-ocp"

# Get list of Infra and Logging nodes
INFRA_NODES=$(oc get nodes -l node-role.kubernetes.io/infra -o jsonpath='{.items[*].metadata.name}')
LOGGING_NODES=$(oc get nodes -l node-role.kubernetes.io/logging -o jsonpath='{.items[*].metadata.name}')

# Get all namespaces, excluding system and excluded namespaces for standard analysis
NAMESPACES=$(oc get namespaces --no-headers -o custom-columns=":metadata.name" | grep -Ev "^($EXCLUDED_NAMESPACES)" || true)

echo -e "Namespace | Node Type | Labels | NodeSelector"

for ns in $NAMESPACES; do
    # Get list of nodes running pods in this namespace
    NS_NODES=$(oc get pods -n "$ns" -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)

    # Determine node type
    NODE_TYPE="Other"
    for node in $NS_NODES; do
        if echo "$INFRA_NODES" | grep -q "$node"; then NODE_TYPE="Infra"; fi
        if echo "$LOGGING_NODES" | grep -q "$node"; then NODE_TYPE="Logging"; fi
    done

    # Get namespace labels
    LABELS=$(oc get namespace "$ns" --no-headers -o jsonpath='{.metadata.labels}' 2>/dev/null)
    [ -z "$LABELS" ] && LABELS="No Labels"

    # Get nodeSelector for the namespace
    NODE_SELECTOR=$(oc get namespace "$ns" -o jsonpath='{.metadata.annotations.openshift\.io/node-selector}' 2>/dev/null)
    [ -z "$NODE_SELECTOR" ] && NODE_SELECTOR="No NodeSelector"

    echo -e "$ns | $NODE_TYPE | $LABELS | $NODE_SELECTOR"
done

# Explicitly check if openshift-gitops is running on Infra/Logging nodes
echo -e "\n🔍 Checking if openshift-gitops is running on Infra/Logging Nodes:"
GITOPS_NODES=$(oc get pods -n openshift-gitops -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)

for node in $GITOPS_NODES; do
    if echo "$INFRA_NODES" | grep -q "$node" || echo "$LOGGING_NODES" | grep -q "$node"; then
        echo -e "⚠️ openshift-gitops is running on Infra/Logging node: $node"
    fi
done

# Check unauthorized usage of Infra/Logging nodes by excluded namespaces
echo -e "\n🔍 Checking for unauthorized namespaces (system and excluded) running on Infra/Logging Nodes:"
ALL_NAMESPACES=$(oc get namespaces --no-headers -o custom-columns=":metadata.name")

for ns in $ALL_NAMESPACES; do
    if [[ "$ns" =~ ^($EXCLUDED_NAMESPACES)$ ]]; then
        NS_NODES=$(oc get pods -n "$ns" -o jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u)
        for node in $NS_NODES; do
            if echo "$INFRA_NODES" | grep -q "$node" || echo "$LOGGING_NODES" | grep -q "$node"; then
                echo -e "⚠️ Unauthorized namespace ($ns) is running on Infra/Logging node: $node"
            fi
        done
    fi
done

echo "✅ Done checking cluster: $CLUSTER_URL"
echo "🎯 All checks completed!"


NAMESPACES=$(oc get namespaces --no-headers -o custom-columns=":metadata.name" | grep -Ev "^(openshift-|kube-|default|upr|lilr|trident)$")

# If openshift-gitops exists, add it back to the list
if oc get namespace openshift-gitops &>/dev/null; then
    NAMESPACES+=" openshift-gitops"
fi
