- name: Append data to CSV file with separate columns
  hosts: localhost
  tasks:
    - name: Run a command to get some output (example task)
      command: echo "value_from_command"
      register: X

    - name: Define another variable
      set_fact:
        var2: "value2"

    - name: Append data to CSV file
      copy:
        content: "{{ X.stdout }},{{ var2 }}\n"
        dest: /path/to/yourfile.csv
        remote_src: yes
        mode: '0644'
      delegate_to: localhost


npx create-react-app crd-comparator
cd crd-comparator
npm install axios
// src/App.js
import React, { useState } from 'react';
import axios from 'axios';

function App() {
    const [crdsA, setCrdsA] = useState([]);
    const [crdsB, setCrdsB] = useState([]);
    const [diffs, setDiffs] = useState([]);
    const [loading, setLoading] = useState(false);

    const fetchCRDs = async () => {
        setLoading(true);
        try {
            const response = await axios.get("http://localhost:8080/api/crds/compare", {
                params: { clusterA: "central", clusterB: "east" }
            });
            setCrdsA(response.data.crdsA);
            setCrdsB(response.data.crdsB);
            setDiffs(response.data.diffs);
        } catch (error) {
            console.error("Error fetching CRDs:", error);
        }
        setLoading(false);
    };

    return (
        <div className="App">
            <h1>CRD Comparator</h1>
            <button onClick={fetchCRDs} disabled={loading}>
                {loading ? "Loading..." : "Fetch & Compare CRDs"}
            </button>

            <h2>Cluster A (Central)</h2>
            <pre>{JSON.stringify(crdsA, null, 2)}</pre>

            <h2>Cluster B (East)</h2>
            <pre>{JSON.stringify(crdsB, null, 2)}</pre>

            <h2>Differences</h2>
            <pre>{JSON.stringify(diffs, null, 2)}</pre>
        </div>
    );
}

export default App;


{
  "name": "my-react-app",
  "version": "1.0.0",
  "description": "A sample React project",
  "main": "index.js",
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-scripts": "5.0.0"
  },
  "devDependencies": {},
  "author": "Your Name",
  "license": "ISC"
}


# Use an official Node.js image as the base
FROM node:18 AS builder

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package.json package-lock.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application files
COPY . .

# Run npx commands, e.g., building a React app
RUN npx react-scripts build

# Production stage
FROM nginx:alpine

# Copy the build output from the previous stage
COPY --from=builder /app/build /usr/share/nginx/html

# Expose the port
EXPOSE 80

# Run Nginx
CMD ["nginx", "-g", "daemon off;"]


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My React App</title>
</head>
<body>
    <div id="root"></div>
</body>
</html>


import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(<App />, document.getElementById('root'));

